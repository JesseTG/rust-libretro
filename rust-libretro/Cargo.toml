[package]
name = "rust-libretro"
version = "0.1.3"
edition = "2021"
authors = [ "Maximilian Mader" ]
description = "libretro API abstractions"
keywords = [ "libretro", "RetroArch", "emulator", "game" ]
categories = [ "api-bindings", "emulators", "game-development", "gui" ]
readme = "README.md"
license = "MIT"
documentation = "https://docs.rs/rust-libretro/"
homepage = "https://github.com/max-m/rust-libretro/"
repository = "https://github.com/max-m/rust-libretro/"

[package.metadata.docs.rs]
features = [ "log", "unstable-env-commands" ]
# Make documentation of, for example, our private CoreWrapper available
rustdoc-args = [ "--document-private-items" ]

[features]
unstable-env-commands = []

[dependencies]
rust-libretro-sys = { version = "0.1.0", path = "../rust-libretro-sys" }
rust-libretro-proc = { version = "0.1.1", path = "rust-libretro-proc" }

cfg-if = "1.0.0"
bitflags = "1.3.2"
doc_item = "0.2.5"
log = { version = "0.4.14", features = [ "std" ], optional = true }

[dev-dependencies]
libc = "0.2.118"
# used by the example cores
log = { version = "0.4.14", features = ["max_level_debug", "release_max_level_debug"] }
image = "0.24.0"
bytemuck = "1.7.3"
byterepr = "0.1.0"

[[example]]
name = "input"
path = "examples/input/lib.rs"
crate-type = ["cdylib"]
required-features = ["unstable-env-commands", "log"]

[[example]]
name = "test"
path = "examples/test/lib.rs"
crate-type = ["cdylib"]
required-features = ["unstable-env-commands", "log"]
